name: build (macOS)
on:
- push

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
        - name: aarch64
          triple: aarch64-apple-darwin
        - name: x64
          triple: x86_64-apple-darwin
        - name: universal
          triple: universal-apple-darwin

    runs-on: macos-12

    steps:
    - name: checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: setup node
      uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c # v3.6.0
      with:
        node-version: "18.14.2"

    - name: setup rust
      run: |
        rustup target add aarch64-apple-darwin
        rustup target add x86_64-apple-darwin

    - name: setup pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # v2.2.4

    - name: print store path
      id: store-path
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: cache pnpm store
      uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: ${{ steps.store-path.outputs.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-store-${{ runner.os }}

    - name: install node deps
      run: pnpm i

    - name: build app (${{ matrix.target.name }})
      run: pnpm tauri build --target ${{ matrix.target.triple }} -- -Z build-std
    - name: upload ${{ matrix.target.name }} app
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: macos-${{ matrix.target.name }}
        path: target/${{ matrix.target.triple }}/release/bundle/dmg/*.dmg
