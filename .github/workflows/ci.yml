name: ci
on:
  push:
    branches:
    - "**"

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-macos:
    name: build (macOS)
    strategy:
      fail-fast: false
      matrix:
        target:
        - name: aarch64
          triple: aarch64-apple-darwin
        - name: x64
          triple: x86_64-apple-darwin

    runs-on: macos-12

    steps:
    - name: checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: setup rust
      run: rustup target add ${{ matrix.target.triple }}

    - name: setup pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # v2.2.4

    - name: setup node
      run: pnpm node -v

    - name: print store path
      id: store-path
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: cache pnpm store
      uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: ${{ steps.store-path.outputs.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: pnpm-store-${{ runner.os }}

    - name: install node deps
      run: pnpm i

    - name: install sccache
      run: |
        mkdir sccache
        cd sccache
        curl -L -o sccache.tar.gz https://github.com/mozilla/sccache/releases/download/v0.3.3/sccache-v0.3.3-x86_64-apple-darwin.tar.gz
        tar --strip-components 1 -xvf sccache.tar.gz
        rm sccache.tar.gz
        cd ..

        echo "RUSTC_WRAPPER=$(pwd)/sccache/sccache" >> $GITHUB_ENV
        echo "SCCACHE_DIR=$(pwd)/sccache" >> $GITHUB_ENV

    - name: build app
      run: pnpm tauri build --target ${{ matrix.target.triple }} -- -Z build-std

    - name: upload app artifact
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: macos-${{ matrix.target.name }}
        path: target/${{ matrix.target.triple }}/release/bundle/dmg/*.dmg

    - name: save sccache dir
      uses: actions/cache/save@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: sccache
        key: sccache-${{ runner.os }}-${{ matrix.target.name }}-${{ github.sha }}


  build-macos-universal:
    name: build (macOS universal)
    needs: build-macos
    runs-on: macos-12

    steps:
    - name: checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: setup rust
      run: |
        rustup target add aarch64-apple-darwin
        rustup target add x86_64-apple-darwin

    - name: setup pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # v2.2.4

    - name: setup node
      run: pnpm node -v

    - name: print store path
      id: store-path
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: cache pnpm store
      uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: ${{ steps.store-path.outputs.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: pnpm-store-${{ runner.os }}

    - name: install sccache
      run: |
        mkdir sccache
        cd sccache
        curl -L -o sccache.tar.gz https://github.com/mozilla/sccache/releases/download/v0.3.3/sccache-v0.3.3-x86_64-apple-darwin.tar.gz
        tar --strip-components 1 -xvf sccache.tar.gz
        rm sccache.tar.gz
        cd ..

        echo "RUSTC_WRAPPER=$(pwd)/sccache/sccache" >> $GITHUB_ENV
        echo "SCCACHE_DIR=$(pwd)/sccache" >> $GITHUB_ENV

    - name: restore sccache dir (aarch64)
      uses: actions/cache/restore@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: sccache
        key: sccache-${{ runner.os }}-aarch64-${{ github.sha }}
        fail-on-cache-miss: true
    - name: restore sccache dir (x64)
      uses: actions/cache/restore@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: sccache
        key: sccache-${{ runner.os }}-x64-${{ github.sha }}
        fail-on-cache-miss: true

    - name: install node deps
      run: pnpm i

    - name: build app
      run: pnpm tauri build --target universal-apple-darwin -- -Z build-std
    - name: upload universal app
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: macos-universal
        path: target/universal-apple-darwin/release/bundle/dmg/*.dmg

    - name: delete sccache caches from github cache
      uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975 # v6.4.0
      with:
        script: |
          let { owner, repo } = context.repo;
          await github.rest.actions.deleteActionsCacheByKey({ owner, repo, key: process.env.key_aarch64 });
          await github.rest.actions.deleteActionsCacheByKey({ owner, repo, key: process.env.key_x64 });
        github-token: ${{ secrets.GHPAT }}
      env:
        key_aarch64: sccache-${{ runner.os }}-aarch64-${{ github.sha }}
        key_x64: sccache-${{ runner.os }}-x64-${{ github.sha }}


  build-linux:
    name: build (Linux)
    runs-on: ubuntu-20.04

    steps:
    - name: install system dependencies
      run: |
        sudo add-apt-repository -y ppa:git-core/ppa
        sudo apt-get install -y \
           build-essential \
           curl \
           git \
           libayatana-appindicator3-dev \
           libclang-dev \
           libgtk-3-dev \
           librsvg2-dev \
           libssl-dev \
           libwebkit2gtk-4.0-dev \
           wget

    - name: checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: setup rust
      run: rustc --version

    - name: setup pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # v2.2.4

    - name: setup node
      run: pnpm node -v

    - name: print store path
      id: store-path
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: cache pnpm store
      uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: ${{ steps.store-path.outputs.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: pnpm-store-${{ runner.os }}

    - name: install node deps
      run: pnpm i

    - name: install sccache
      run: |
        mkdir sccache
        cd sccache
        curl -L -o sccache.tar.gz https://github.com/mozilla/sccache/releases/download/v0.3.3/sccache-v0.3.3-x86_64-unknown-linux-musl.tar.gz
        tar --strip-components 1 -xvf sccache.tar.gz
        rm sccache.tar.gz
        cd ..

        echo "RUSTC_WRAPPER=$(pwd)/sccache/sccache" >> $GITHUB_ENV
        echo "SCCACHE_DIR=$(pwd)/sccache" >> $GITHUB_ENV

    - name: build app
      run: pnpm tauri build --target x86_64-unknown-linux-gnu -- -Z build-std

    - name: upload app artifact (deb)
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: linux-deb
        path: target/x86_64-unknown-linux-gnu/release/bundle/deb/*.deb

    - name: upload app artifact (appimage)
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: linux-appimage
        path: target/x86_64-unknown-linux-gnu/release/bundle/appimage/*.AppImage

    - name: print glibc version
      run: ldd --version


  build-windows:
    name: build (Windows)
    runs-on: windows-2022

    steps:
    - name: checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: setup rust
      shell: bash
      run: |
        rustup target add x86_64-pc-windows-msvc
        rustc --version

    - name: setup pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # v2.2.4

    - name: setup node
      shell: bash
      run: pnpm node -v

    - name: print store path
      shell: bash
      id: store-path
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: cache pnpm store
      uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: ${{ steps.store-path.outputs.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: pnpm-store-${{ runner.os }}

    - name: install node deps
      shell: bash
      run: pnpm i

    - name: install sccache
      shell: bash
      run: |
        mkdir sccache
        cd sccache
        curl -L -o sccache.tar.gz https://github.com/mozilla/sccache/releases/download/v0.3.3/sccache-v0.3.3-x86_64-pc-windows-msvc.tar.gz
        tar --strip-components 1 -xvf sccache.tar.gz
        rm sccache.tar.gz
        cd ..

        echo "RUSTC_WRAPPER=$(pwd)/sccache/sccache" >> $GITHUB_ENV
        echo "SCCACHE_DIR=$(pwd)/sccache" >> $GITHUB_ENV

    - name: build app
      shell: bash
      run: pnpm tauri build --target x86_64-pc-windows-msvc -- -Z build-std

    - name: upload app artifact
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
      with:
        name: windows-msi
        path: target/x86_64-pc-windows-msvc/release/bundle/msi/*.msi


  release-rolling:
    name: release (rolling)
    runs-on: ubuntu-22.04
    if: ${{ github.ref == 'refs/heads/wiwi' && contains(github.event.head_commit.message, '[release rolling]') }}
    needs:
    - build-macos
    - build-macos-universal
    - build-linux
    - build-windows

    steps:
    - name: checkout code
      uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

    - name: setup pnpm
      uses: pnpm/action-setup@c3b53f6a16e57305370b4ae5a540c2077a1d50dd # v2.2.4

    - name: setup node
      run: pnpm node -v

    - name: print store path
      id: store-path
      run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - name: cache pnpm store
      uses: actions/cache@69d9d449aced6a2ede0bc19182fadc3a0a42d2b0 # v3.2.6
      with:
        path: ${{ steps.store-path.outputs.STORE_PATH }}
        key: pnpm-store-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: pnpm-store-${{ runner.os }}

    - name: install node deps
      run: pnpm i

    - name: download artifact macos-aarch64
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: macos-aarch64
        path: artifacts
    - name: download artifact macos-x64
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: macos-x64
        path: artifacts
    - name: download artifact macos-universal
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: macos-universal
        path: artifacts
    - name: download artifact linux-deb
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: linux-deb
        path: artifacts
    - name: download artifact linux-appimage
      uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      with:
        name: linux-appimage
        path: artifacts

    - name: create release
      run: node -r @swc-node/register scripts/release.ts
      env:
        github_pat: ${{ secrets.GHPAT }}
        target_commitish: ${{ github.sha }}
